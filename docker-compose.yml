version: "3"

services:
  chirpstack:
    image: chirpstack/chirpstack:4
    command: -c /etc/chirpstack
    restart: unless-stopped
    volumes:
      - ./configuration/chirpstack:/etc/chirpstack
      - ${BASE_PATH}/lorawan-devices:/opt/lorawan-devices
    depends_on:
      - postgres
      - mosquitto
      - redis
    environment:
      - MQTT_BROKER_HOST=mosquitto
      - REDIS_HOST=redis
      - POSTGRESQL_HOST=postgres
    ports:
      - 8080:8080

  chirpstack-gateway-bridge:
    image: chirpstack/chirpstack-gateway-bridge:4
    restart: unless-stopped
    ports:
      - 1700:1700/udp
    volumes:
      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
    environment:
      - INTEGRATION__MQTT__EVENT_TOPIC_TEMPLATE=cn470_10/gateway/{{ .GatewayID }}/event/{{ .EventType }}
      - INTEGRATION__MQTT__STATE_TOPIC_TEMPLATE=cn470_10/gateway/{{ .GatewayID }}/state/{{ .StateType }}
      - INTEGRATION__MQTT__COMMAND_TOPIC_TEMPLATE=cn470_10/gateway/{{ .GatewayID }}/command/#
    depends_on:
      - mosquitto

#  chirpstack-gateway-bridge-basicstation:
#    image: chirpstack/chirpstack-gateway-bridge:4
#    restart: unless-stopped
#    command: -c /etc/chirpstack-gateway-bridge/chirpstack-gateway-bridge-basicstation-eu868.toml
#    ports:
#      - 3001:3001
#    volumes:
#      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge
#    depends_on:
#      - mosquitto

  chirpstack-rest-api:
    image: chirpstack/chirpstack-rest-api:4
    restart: unless-stopped
    command: --server chirpstack:8080 --bind 0.0.0.0:8090 --insecure
    ports:
      - 8090:8090
    depends_on:
      - chirpstack

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - ${BASE_PATH}/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USERNAME}

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - ${BASE_PATH}/redis:/data

  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    ports:
      - 1883:1883
    volumes:
      - ./configuration/mosquitto/config/:/mosquitto/config/

  zookeeper:
    image: ${ZOOKEEPER_IMAGE}
    restart: unless-stopped
    ports:
      - '2181:2181'
    env_file:
      - sensor.env
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ${BASE_PATH}/zookeeper/data:/data
      - ${BASE_PATH}/zookeeper/datalog:/datalog
      - ${BASE_PATH}/zookeeper/logs:/logs

  traefik:
    image: ${TRAEFIK_IMAGE}
    restart: unless-stopped
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.websecure.http.tls=true
      - --entryPoints.traefik.address=:9000
      - --entryPoints.sensorweb.address=:8081
      - --entryPoints.sensorhost.address=:53301
    env_file:
      - sensor.env
    ports:
      - 80:80
      - 8081:8081
      - 443:443
      - 19000:9000
      - 53301:53301
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


  sensor-gateway-web:
    image: ${SENSOR_GATEWAY_WEB}
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.sensor-gateway-web.entrypoints=sensorweb
      - traefik.http.routers.sensor-gateway-web.rule=PathPrefix(`/api/`, `/swagger{.+}`,`/webjars/`,`/v2`,`/actuator`)
      - com.centurylinklabs.watchtower.enable=true
    depends_on:
      - zookeeper
      - redis
      - postgres
      - mosquitto
      - traefik
    env_file:
      - sensor.env

  sensor-module-auth:
    image: ${SENSOR_MODULE_AUTH}
    restart: unless-stopped
    depends_on:
      - sensor-gateway-web
    env_file:
      - sensor.env
    environment:
      - JAVA_OPTS=-Xmx512m


  sensor-module-core:
    image: ${SENSOR_MODULE_CORE}
    restart: unless-stopped
    depends_on:
      - sensor-module-auth
    env_file:
      - sensor.env

  sensor-monitor-web:
    image: ${SENSOR_MONITOR_WEB}
    restart: unless-stopped
    depends_on:
      - traefik
    labels:
      - traefik.enable=true
      - traefik.http.routers.sensor-monitor-web.entrypoints=sensorweb
      - traefik.http.routers.sensor-monitor-web.rule=PathPrefix(`/`)
